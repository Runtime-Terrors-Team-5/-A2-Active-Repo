@startuml
class com.neves6.piazzapanic.TutorialScreen {
~ PiazzaPanicGame game
~ OrthographicCamera camera
~ SpriteBatch batch
~ BitmapFont font
~ Texture tutorial
~ int winWidth
~ int winHeight
~ String continueTo
+ void show()
+ void render(float)
+ void resize(int,int)
+ void hide()
+ void dispose()
}
class com.neves6.piazzapanic.SettingsScreen {
~ PiazzaPanicGame game
~ OrthographicCamera camera
~ SpriteBatch batch
~ BitmapFont font
~ Texture bg
~ Stage stage
~ TextButton fullscreenButton
~ TextButton volumeFullButton
~ TextButton volumeHalfButton
~ TextButton volumeNoneButton
~ TextButton.TextButtonStyle buttonStyle
~ Skin skin
~ TextureAtlas atlas
~ int winWidth
~ int winHeight
~ ArrayList<String> settings
+ void show()
+ void render(float)
+ void resize(int,int)
+ void hide()
+ void dispose()
}
class com.neves6.piazzapanic.IntroScreen {
~ PiazzaPanicGame game
~ OrthographicCamera camera
~ SpriteBatch batch
~ Texture RuntimeTerrorLogo
~ Animation<TextureRegion> introAnimation
~ Texture introSheet
~ BitmapFont font
~ float stateTime
~ int FRAME_COLS
~ int FRAME_ROWS
~ int winWidth
~ int winHeight
+ void show()
+ void render(float)
+ void resize(int,int)
+ void hide()
+ void dispose()
}
class com.neves6.piazzapanic.LevelSelectorScreen {
~ PiazzaPanicGame game
~ OrthographicCamera camera
~ SpriteBatch batch
~ BitmapFont font
~ Texture bg
~ Texture lock
~ int winWidth
~ int winHeight
~ float bgScaleFactor
~ Stage stage
~ TextButton level1Button
~ TextButton level2Button
~ TextButton level3Button
~ TextButton loadButton
~ TextButton endlessButton
~ TextButton.TextButtonStyle buttonStyle
~ Skin skin
~ TextureAtlas atlas
+ void show()
+ void render(float)
+ void resize(int,int)
+ void hide()
+ void dispose()
}
class com.neves6.piazzapanic.PiazzaPanicGame {
~ SpriteBatch batch
+ void create()
+ void resize(int,int)
+ void render(float)
+ void dispose()
}
class com.neves6.piazzapanic.AllMachinesTest {
~ ArrayList<Machine> machines
~ {static} TiledMap map
+ void testMachineOutput()
+ void testAddItemToChefInventory()
+ {static} String getMachineFromGame(String,Integer,String)
+ void testNewAddToChefInventory()
+ void testNewAddDispensedItemsToChefInventory()
+ void testItemsAddedToTray()
+ void testUnlockableMachines()
+ void testCustomerOrdersRemovedOnceServed()
}
class com.neves6.piazzapanic.AssetTests {
+ void testLevelSelectorExists()
+ void testLeaderboardExists()
+ void testTitleAssetsExists()
+ void testFontsExists()
+ void testFoodsExists()
+ void testIconsExists()
+ void testChefAndCustomerExists()
+ void testSoundsExists()
+ void testTilemapsExists()
+ void testTiles()
}
class com.neves6.piazzapanic.PowerUp {
+ String powerUpType
- int xCoord
- int yCoord
- int time
+ boolean active
+ Texture texture
+ {static} List<PowerUp> PowerUps
+ String getType()
+ int getTime()
+ int getxCoord()
+ int getyCoord()
+ void clearxCoord()
+ void clearyCoord()
+ void incrementTime()
+ void setTime()
+ void clearTime()
+ boolean getActive()
+ void setActive()
+ {static} ArrayList<Quintet> generatePowerData()
}
class com.neves6.piazzapanic.testSaveLoad {
~ TiledMap map
+ void testGameScreen()
}
class com.neves6.piazzapanic.Utility {
+ {static} String settingsFilepath
+ {static} ArrayList<String> getSettings()
+ {static} void setSettings(ArrayList<String>)
- {static} void settingsFileExistenceHandler()
}
class com.neves6.piazzapanic.AllLevelsTest {
~ {static} TiledMap map
+ void testLevelOne()
+ void testLevelTwo()
+ void testLevelThree()
+ void testLevelFour()
}
class com.neves6.piazzapanic.poweruptest {
~ TiledMap map
+ void testHeartRep()
+ void testFastIcon()
+ void testMoneyIcon()
+ void testMinusReputation()
+ void testFreezeTime()
}
class com.neves6.piazzapanic.WinScreenTest {
+ void testWinScreenVars()
+ void testOutputFunctionality()
}
class com.neves6.piazzapanic.saveData {
- ArrayList<Sextet> chefdata
- HashMap machinedata
- int level
- ArrayList<Quartet> customerdata
- int selectedChef
- ArrayList<String> trayContent
- float timeElapled
- int repPoint
- int customerRemaining
- float customerSpawnTimer
- ArrayList validOrder
- ArrayList powerUPs
+ ScenarioGameMaster loadGameMaster(PiazzaPanicGame)
+ HashMap<Pair,ArrayList<Septet>> getMachinedata()
+ int getLevel()
+ ArrayList<Quartet> getCustomerdata()
+ ArrayList<Sextet> getChefdata()
+ int getSelectedChef()
+ ArrayList<String> getTrayContent()
+ float getTimeElapled()
+ int getRepPoint()
+ int getCustomerRemaining()
+ float getCustomerSpawnTimer()
+ ArrayList getValidOrder()
+ ArrayList getPowerUPs()
+ boolean equals(Object)
+ int hashCode()
}
class com.neves6.piazzapanic.GdxTestRunner {
- Map<FrameworkMethod,RunNotifier> invokeInRender
+ void create()
+ void resume()
+ void render()
+ void resize(int,int)
+ void pause()
+ void dispose()
# void runChild(FrameworkMethod,RunNotifier)
- void waitUntilInvokedInRenderMethod()
}
class com.neves6.piazzapanic.CreditsScreen {
~ PiazzaPanicGame game
~ OrthographicCamera camera
~ SpriteBatch batch
~ BitmapFont font
~ Texture credits
~ int winWidth
~ int winHeight
+ void show()
+ void render(float)
+ void resize(int,int)
+ void hide()
+ void dispose()
}
class com.neves6.piazzapanic.GameWinScreen {
~ PiazzaPanicGame game
~ OrthographicCamera camera
~ SpriteBatch batch
~ BitmapFont font
~ Texture bg
~ int winWidth
~ int winHeight
~ float bgScaleFactor
~ Stage stage
~ TextButton creditsButton
~ TextButton titleButton
~ TextButton.TextButtonStyle buttonStyle
~ Skin skin
~ TextureAtlas atlas
~ int completionTime
~ String lbText
~ int customersServed
+ void show()
+ void output_to_leaderboard(String)
+ void render(float)
+ String winMsg()
+ Pair<Integer,Integer> returnVars()
+ void resize(int,int)
+ void hide()
+ void dispose()
}
class com.neves6.piazzapanic.TitleScreen {
~ PiazzaPanicGame game
~ OrthographicCamera camera
~ SpriteBatch batch
~ BitmapFont font
~ Texture bg
~ int winWidth
~ int winHeight
~ float bgScaleFactor
~ Stage stage
~ TextButton playButton
~ TextButton tutorialButton
~ TextButton leaderboardButton
~ TextButton creditsButton
~ TextButton settingsButton
~ TextButton exitButton
~ TextButton.TextButtonStyle buttonStyle
~ Skin skin
~ TextureAtlas atlas
+ void show()
+ void render(float)
+ void resize(int,int)
+ void hide()
+ void dispose()
}
class com.neves6.piazzapanic.LeaderboardScreen {
~ PiazzaPanicGame game
~ OrthographicCamera camera
~ SpriteBatch batch
~ BitmapFont font
~ int winWidth
~ int winHeight
~ String text
~ ArrayList<Pair<String,Integer>> lbPairs
+ void show()
+ void render(float)
+ void resize(int,int)
+ void hide()
+ void dispose()
}
class com.neves6.piazzapanic.GameScreen {
~ PiazzaPanicGame game
~ OrthographicCamera camera
~ SpriteBatch batch
~ BitmapFont fontBlack
~ BitmapFont fontGreen
~ Stage stage
~ int winWidth
~ int winHeight
~ TiledMap map
~ OrthogonalTiledMapRenderer renderer
~ ScenarioGameMaster gm
~ float unitScale
~ float wScale
~ float hScale
~ int INITIAL_WIDTH
~ int INITIAL_HEIGHT
~ int[] renderableLayers
~ Texture selectedTexture
~ Texture bar1
~ Texture bar2
~ Texture moneyUI
~ Texture lock
~ Texture unlockUI
~ Texture unlockUITip
~ Music music_background
+ void show()
+ void render(float)
+ void resize(int,int)
+ void hide()
+ void dispose()
+ ScenarioGameMaster returnGM()
}
class com.neves6.piazzapanic.GameMaster {
}
class com.neves6.piazzapanic.ScenarioGameMaster {
~ PiazzaPanicGame game
~ TiledMap map
~ TiledMapTileLayer collisionLayer
~ ArrayList<Chef> chefs
~ Stack<Customer> customers
~ ArrayList<Machine> machines
~ ArrayList<String> tray
~ ArrayList<String> pizzatray
~ int selectedChef
~ float totalTimer
~ Sound grill
~ Sound chopping
~ Sound serving
~ Sound fridge
~ Sound forming
~ Sound trash
~ Sound ding
~ float soundVolume
~ ArrayList<String> settings
~ Random rand
~ int level
~ int repPoint
~ ArrayList validOrder
~ int powerUpCount
~ Texture repIcon
~ int cusomerRemaining
- float customerSpawnTimer
- float finalSpawnTimer
~ int customerPersonalTimer
~ boolean goldGrillUnlocked
~ boolean formingStationUnlocked
~ boolean pizzaStationUnlocked
~ boolean chefUnlocked
~ boolean unlockUI
~ boolean endless
~ HashMap<Pair<Integer,Integer>,ArrayList<Machine>> machineLocation
~ int money
~ List<Texture> trayTextures
- int customersServed
+ saveData generateSaveData()
+ void setSelectedChef(int)
+ int getSelectedChef()
+ Chef getChef(int)
+ void tryMove(String)
- boolean wouldNotCollide(int,int,int)
+ String generateCustomersTrayText()
+ String generateTimerText()
+ String generateMoneyText()
+ String getMachineTimerForChef(int)
+ String getMachineTimerForChefDone(int)
+ int getCustomersSize()
+ int getCustomerRemainingTime()
+ Customer getFirstCustomer()
+ int getChefsLength()
+ void spawnCustomer()
+ void tickUpdate(float)
+ void tryInteract()
- void setTrayTextures()
- void addToTray(boolean)
+ void UseAddToTray(boolean)
+ void generatePowerUp()
+ void generatePowerUpTest(int)
+ void clearPowerUp()
+ void getPowerUp()
+ void powerUpEffect()
+ void repDecrease()
+ void repIncrease()
+ int getRepPoint()
+ int getMoney()
+ void setMoney(int)
+ float getTotalTimer()
+ void unlockChef()
+ void unlockMachine(int)
+ int getCustomersServed()
+ void unlockUItoggle()
+ Quintet<Float,Float,Integer,ArrayList,Boolean> returnStartingVars()
}
class com.neves6.piazzapanic.Machine {
- String type
- String input
- String output
- float processingTime
- Boolean sticky
- Boolean active
- float runtime
- Chef operator
+ void process(Chef)
+ void attemptGetOutput(int)
+ void attemptGetOutput()
+ void incrementRuntime(float)
+ float getRuntime()
+ boolean getActive()
+ float getProcessingTime()
+ String getInput()
+ String getOutput()
+ Septet getMachineInfo()
+ void fastForwardTime(Boolean,float)
}
class com.neves6.piazzapanic.SaveAndLoadHandler {
+ {static} String savesFilepath
- {static} Kryo kryo
+ {static} saveData getSave()
+ {static} void setSave(ScenarioGameMaster)
- {static} void saveFileExistenceHandler()
}
class com.neves6.piazzapanic.Person {
- String name
- int xCoord
- int yCoord
+ int getxCoord()
+ int getyCoord()
+ void setxCoord(int)
+ void setyCoord(int)
+ void alterxCoord(int)
+ void alteryCoord(int)
}
class com.neves6.piazzapanic.Customer {
- String order
- Texture txUp
- Texture txLeft
- float timer
- float maxTimer
- Texture orderTexture
+ String getOrder()
+ void setOrder(String)
+ Texture getTxUp()
+ Texture getTxLeft()
+ Texture getOrderTexture()
+ void timerDecrease(float)
+ float getTimer()
+ float getMaxTimer()
+ Quartet<Integer,Integer,String,Float> getCustomerData()
}
class com.neves6.piazzapanic.Chef {
- boolean isStickied
- Stack<String> inventory
- String facing
- Texture txUp
- Texture txDown
- Texture txLeft
- Texture txRight
- Texture uiIcon
- Texture txNow
- boolean isInteracting
- Machine machineInteractingWith
- int chefNumb
- FileHandle file
- List<Texture> invItems
+ boolean getIsStickied()
+ Texture getTxNow()
+ Texture getUiIcon()
+ void setIsStickied(boolean)
+ void setMachineInteractingWith(Machine)
+ Machine getMachineInteractingWith()
+ List<Texture> getInvItems()
+ Stack<String> getInventory()
+ void addToInventory(String)
+ void removeTopFromInventory()
+ String getFacing()
+ void setFacing(String)
+ void setInventoryTextures()
+ int getChefNumb()
+ Sextet<Integer,Integer,String,Stack<String>,Boolean,Integer> getChefInfo()
}
class com.neves6.piazzapanic.pizzamachineTest {
~ ArrayList<Machine> machines
~ TiledMap map
~ ArrayList<Chef> chefs
+ void testPizzaMachineOutput()
+ void testPizzaAddedToChefInventory()
+ void testCheeseDoughAddedToChefInventory()
+ void testNewFridgeOutput()
}


com.badlogic.gdx.ScreenAdapter <|-- com.neves6.piazzapanic.TutorialScreen
com.badlogic.gdx.ScreenAdapter <|-- com.neves6.piazzapanic.SettingsScreen
com.badlogic.gdx.ScreenAdapter <|-- com.neves6.piazzapanic.IntroScreen
com.badlogic.gdx.ScreenAdapter <|-- com.neves6.piazzapanic.LevelSelectorScreen
com.badlogic.gdx.Game <|-- com.neves6.piazzapanic.PiazzaPanicGame
java.io.Serializable <|.. com.neves6.piazzapanic.saveData
com.badlogic.gdx.ApplicationListener <|.. com.neves6.piazzapanic.GdxTestRunner
org.junit.runners.BlockJUnit4ClassRunner <|-- com.neves6.piazzapanic.GdxTestRunner
com.badlogic.gdx.ScreenAdapter <|-- com.neves6.piazzapanic.CreditsScreen
com.badlogic.gdx.ScreenAdapter <|-- com.neves6.piazzapanic.GameWinScreen
com.badlogic.gdx.ScreenAdapter <|-- com.neves6.piazzapanic.TitleScreen
com.badlogic.gdx.ScreenAdapter <|-- com.neves6.piazzapanic.LeaderboardScreen
com.badlogic.gdx.ScreenAdapter <|-- com.neves6.piazzapanic.GameScreen
com.neves6.piazzapanic.GameMaster <|-- com.neves6.piazzapanic.ScenarioGameMaster
com.neves6.piazzapanic.Person <|-- com.neves6.piazzapanic.Customer
com.neves6.piazzapanic.Person <|-- com.neves6.piazzapanic.Chef
@enduml